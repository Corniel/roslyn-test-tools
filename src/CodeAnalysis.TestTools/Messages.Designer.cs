//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeAnalysis.TestTools {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CodeAnalysis.TestTools.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The analyzer under test crashed..
        /// </summary>
        internal static string AnalyzerCrashed {
            get {
                return ResourceManager.GetString("AnalyzerCrashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ArgumentException_FileDoesNotExist {
            get {
                return ResourceManager.GetString("ArgumentException_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The setup is incomplete. No expected sources have been configured..
        /// </summary>
        internal static string IncompleteSetup_NoExpectedSources {
            get {
                return ResourceManager.GetString("IncompleteSetup_NoExpectedSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The setup is incomplete. No sources have been configured..
        /// </summary>
        internal static string IncompleteSetup_NoSources {
            get {
                return ResourceManager.GetString("IncompleteSetup_NoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String value does not represent a known language..
        /// </summary>
        internal static string Language_InvalidFormat {
            get {
                return ResourceManager.GetString("Language_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A langauage conflict occured..
        /// </summary>
        internal static string LanguageConflict {
            get {
                return ResourceManager.GetString("LanguageConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The analyzer &apos;{0}&apos; does not support {1}..
        /// </summary>
        internal static string LanguageConflict_Analyzer {
            get {
                return ResourceManager.GetString("LanguageConflict_Analyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A code fix can only be verified against a single source..
        /// </summary>
        internal static string NotSupported_MultipleExpectedSources {
            get {
                return ResourceManager.GetString("NotSupported_MultipleExpectedSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A code fix can only be applied on a single source..
        /// </summary>
        internal static string NotSupported_MultipleSources {
            get {
                return ResourceManager.GetString("NotSupported_MultipleSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No dll&apos;s found for NuGet package &apos;{0}&apos; (version: {1})..
        /// </summary>
        internal static string Nuget_NoDlls {
            get {
                return ResourceManager.GetString("Nuget_NoDlls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No dll&apos;s found for NuGet package &apos;{0}&apos; (version: {1}) with runtime {2}..
        /// </summary>
        internal static string Nuget_NoDllsWithRuntime {
            get {
                return ResourceManager.GetString("Nuget_NoDllsWithRuntime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected ^ at line {0} pos {1}. Only one precise location can be specified per line..
        /// </summary>
        internal static string Parse_Error_RepeatingPreciseLocation {
            get {
                return ResourceManager.GetString("Parse_Error_RepeatingPreciseLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0} contains an invalid pattern. Please fix, or remove it..
        /// </summary>
        internal static string ParseError_InvalidPattern {
            get {
                return ResourceManager.GetString("ParseError_InvalidPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting only one precise location per line, found {0} on line {1}. If you want to specify more than one precise location per line you need to omit the Noncompliant comment:
        ///internal class MyClass : IInterface1 // there should be no Noncompliant comment
        ///^^^^^^^ {{{{Do not create internal classes.}}}}
        ///                         ^^^^^^^^^^^ @-1 {{{{IInterface1 is bad for your health.}}}}.
        /// </summary>
        internal static string ParseError_MultiplePreciseLocations {
            get {
                return ResourceManager.GetString("ParseError_MultiplePreciseLocations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected redundant issue location on line {0}. Issue location can be set either with &apos;precise issue location&apos; or &apos;exact column location&apos; pattern but not both..
        /// </summary>
        internal static string ParseError_RedundentPreciseLocation {
            get {
                return ResourceManager.GetString("ParseError_RedundentPreciseLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected {0} at line {1} pos {2}. Either correctly use &apos;{{{{message}}}}&apos; or remove the curly brace..
        /// </summary>
        internal static string ParseError_RemainingCurlyBrace {
            get {
                return ResourceManager.GetString("ParseError_RemainingCurlyBrace", resourceCulture);
            }
        }
    }
}
